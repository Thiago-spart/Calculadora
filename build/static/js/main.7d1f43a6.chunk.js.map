{"version":3,"sources":["componentes/Button.js","componentes/Buttons.js","componentes/Output.js","componentes/App.js","index.js"],"names":["Button","className","this","props","classe","classebt","onClick","Método","value","Component","Buttons","Output","display","App","Set","state","operação","valor","firststate","first","setState","laststate","last","Resultado","AC","alert","Somar","Subtrair","Multiplicar","Dividir","total","Number","parseFloat","ReactDOM","render","document","getElementById"],"mappings":"iQAkBeA,G,6KAbD,IAAD,OAEL,OACI,qBAAKC,UAAWC,KAAKC,MAAMC,OAA3B,SACI,8BACG,wBACAH,UAAWC,KAAKC,MAAME,SAAUC,QAAS,kBAAM,EAAKH,MAAMI,YAAO,EAAKJ,MAAMK,QAD5E,SACqFN,KAAKC,MAAMK,gB,GAR9FC,cCoINC,E,4MAlIXH,YAAS,SAACC,GACN,EAAKL,MAAMI,YAAOC,I,uDAIlB,OACI,sBAAKP,UAAU,UAAf,UACI,cAAC,EAAD,CACAG,OAAQ,KACRC,SAAU,SACVE,YAAQL,KAAKK,YACbC,MAAO,OAEP,cAAC,EAAD,CACAJ,OAAQ,KACRC,SAAU,SACVG,MAAO,MACPD,YAAQL,KAAKK,cAEb,cAAC,EAAD,CACAH,OAAQ,KACRC,SAAU,SACVG,MAAO,IACPD,YAAQL,KAAKK,cAEb,cAAC,EAAD,CACAH,OAAQ,KACRC,SAAU,UACVG,MAAO,IACPD,YAAQL,KAAKK,cAEb,uBACA,cAAC,EAAD,CACAH,OAAQ,KACRC,SAAU,SACVG,MAAO,IACPD,YAAQL,KAAKK,cAEb,cAAC,EAAD,CACAH,OAAQ,KACRC,SAAU,SACVG,MAAO,IACPD,YAAQL,KAAKK,cAEb,cAAC,EAAD,CACAH,OAAQ,KACRC,SAAU,SACVG,MAAO,IACPD,YAAQL,KAAKK,cAEb,cAAC,EAAD,CACAH,OAAQ,KACRC,SAAU,cACVG,MAAO,IACPD,YAAQL,KAAKK,cAEb,uBACA,cAAC,EAAD,CACAH,OAAQ,KACRC,SAAU,SACVG,MAAO,IACPD,YAAQL,KAAKK,cAEb,cAAC,EAAD,CACAH,OAAQ,KACRC,SAAU,SACVG,MAAO,IACPD,YAAQL,KAAKK,cAEb,cAAC,EAAD,CACAH,OAAQ,KACRC,SAAU,SACVG,MAAO,IACPD,YAAQL,KAAKK,cAEb,cAAC,EAAD,CACAH,OAAQ,KACRC,SAAU,WACVG,MAAO,IACPD,YAAQL,KAAKK,cAEb,uBACA,cAAC,EAAD,CACAH,OAAQ,KACRC,SAAU,SACVG,MAAO,IACPD,YAAQL,KAAKK,cAEb,cAAC,EAAD,CACAH,OAAQ,KACRC,SAAU,SACVG,MAAO,IACPD,YAAQL,KAAKK,cAEb,cAAC,EAAD,CACAH,OAAQ,KACRC,SAAU,SACVG,MAAO,IACPD,YAAQL,KAAKK,cAEb,cAAC,EAAD,CACAH,OAAQ,KACRC,SAAU,QACVG,MAAO,IACPD,YAAQL,KAAKK,cAEb,uBACA,cAAC,EAAD,CACAH,OAAQ,KACRC,SAAU,OACVG,MAAO,IACPD,YAAQL,KAAKK,cAEb,cAAC,EAAD,CACAH,OAAQ,KACRC,SAAU,SACVG,MAAO,IACPD,YAAQL,KAAKK,cAEb,cAAC,EAAD,CACAH,OAAQ,KACRC,SAAU,YACVG,MAAO,IACPD,YAAQL,KAAKK,qB,GA7HPE,aCYPE,G,6KAVP,OACI,8BACI,qBAAKV,UAAU,UAAf,SACIC,KAAKC,MAAMS,gB,GALVH,cC0HNI,G,wDAtHb,aAAe,IAAD,8BACZ,gBASFC,IAAM,SAACN,GACL,GAAIA,GAAS,GAAKA,GAAS,EACzB,GAA4B,OAAxB,EAAKO,MAAMC,mBAAmB,CAChC,IAAIC,EAAQ,KACRC,EAAa,EAAKH,MAAMI,MAE1BF,EADuB,OAArB,EAAKF,MAAMI,MACLX,EAGAU,GAAcV,EAExB,EAAKY,SAAS,CAACD,MAAOF,EAAOL,QAASK,QAEnC,CACH,IAAIA,EAAQ,KACRI,EAAY,EAAKN,MAAMO,KAEzBL,EADsB,OAApB,EAAKF,MAAMO,KACLd,EAGAa,GAAab,EAEvB,EAAKY,SAAS,CAACE,KAAML,EAAOL,QAASK,SAGpC,GAAc,MAAVT,GAA2B,MAAVA,GAA2B,MAAVA,GAA2B,MAAVA,EAC1D,EAAKY,SAAS,CAACJ,iBAAUR,EAAOI,QAASJ,SAEtC,GAAc,MAAVA,EACP,EAAKe,iBAEF,GAAc,OAAVf,EACP,EAAKgB,UAEF,GAAc,MAAVhB,EACP,GAAuB,MAAnB,EAAKO,MAAMO,KAAc,CAC3B,IAAIJ,EAAa,EAAKH,MAAMI,MACxBF,EAAQC,GAAc,IAC1B,EAAKE,SAAS,CAACD,MAAOF,EAAOL,QAASK,QACjC,CACL,IAAII,EAAY,EAAKN,MAAMO,KACvBL,EAAQI,GAAa,IACzB,EAAKD,SAAS,CAACE,KAAML,EAAOL,QAASK,QAGtB,QAAVT,GAA6B,MAAVA,GAC1BiB,MAAM,qCAxDI,EA4DdF,UAAY,WACe,OAArB,EAAKR,MAAMI,MACe,MAAxB,EAAKJ,MAAMC,mBACf,EAAKU,QAE4B,MAAxB,EAAKX,MAAMC,mBAClB,EAAKW,WAE0B,MAAxB,EAAKZ,MAAMC,mBAClB,EAAKY,cAE0B,MAAxB,EAAKb,MAAMC,oBAClB,EAAKa,UAIqB,MAAxB,EAAKd,MAAMC,oBAA4C,MAAxB,EAAKD,MAAMC,mBAC5C,EAAKI,SAAS,CAACR,QAAS,EAAKG,MAAMO,KAAMH,MAAO,EAAKJ,MAAMO,KAAMA,KAAM,KAAMN,iBAAU,OAEvF,EAAKQ,MA/EG,EAoFdA,GAAK,WACH,EAAKJ,SAAS,CAACR,QAAS,EAAGO,MAAO,KAAMG,KAAM,KAAMN,iBAAU,QArFlD,EAwFdU,MAAQ,WACN,IAAII,EAAQC,OAAOC,WAAW,EAAKjB,MAAMI,QAAUY,OAAOC,WAAW,EAAKjB,MAAMO,OAChF,EAAKF,SAAS,CAACD,MAAOW,EAAOR,KAAM,KAAMV,QAASkB,KA1FtC,EA6FdH,SAAW,WACT,IAAIG,EAAQC,OAAOC,WAAW,EAAKjB,MAAMI,QAAUY,OAAOC,WAAW,EAAKjB,MAAMO,OAChF,EAAKF,SAAS,CAACD,MAAOW,EAAOR,KAAM,KAAMV,QAASkB,KA/FtC,EAkGdF,YAAc,WACZ,IAAIE,EAAQC,OAAOC,WAAW,EAAKjB,MAAMI,QAAUY,OAAOC,WAAW,EAAKjB,MAAMO,OAChF,EAAKF,SAAS,CAACD,MAAOW,EAAOR,KAAM,KAAMV,QAASkB,KApGtC,EAuGdD,QAAU,WACR,IAAIC,EAAQC,OAAOC,WAAW,EAAKjB,MAAMI,QAAUY,OAAOC,WAAW,EAAKjB,MAAMO,OAChF,EAAKF,SAAS,CAACD,MAAOW,EAAOR,KAAM,KAAMV,QAASkB,KAvGlD,EAAKf,MAAQ,CACXH,QAAS,EACTO,MAAO,KACPG,KAAM,KACNN,iBAAU,MANA,E,qDA6GZ,OACE,sBAAKf,UAAU,MAAf,UACE,cAAC,EAAD,CAAQW,QAASV,KAAKa,MAAMH,UAC5B,cAAC,EAAD,CAASL,YAAQL,KAAKY,a,GAlHZL,cCDlBwB,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.7d1f43a6.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport './Button.css';\r\n\r\nclass Button extends Component {\r\n\r\n    render() {\r\n        \r\n        return(\r\n            <div className={this.props.classe}>\r\n                <div>\r\n                   <button \r\n                   className={this.props.classebt} onClick={() => this.props.Método(this.props.value)}>{this.props.value}</button>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Button;","import React, { Component } from 'react';\r\nimport Button from './Button';\r\n\r\nclass Buttons extends Component {\r\n\r\n    Método = (value) => {\r\n        this.props.Método(value)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className='Buttons'>\r\n                <Button\r\n                classe={'bt'}\r\n                classebt={'number'}\r\n                Método={this.Método}\r\n                value={'AC'}\r\n                />\r\n                <Button\r\n                classe={'bt'}\r\n                classebt={'number'}\r\n                value={'+/-'}\r\n                Método={this.Método}\r\n                />\r\n                <Button\r\n                classe={'bt'}\r\n                classebt={'number'}\r\n                value={'%'}\r\n                Método={this.Método}\r\n                />\r\n                <Button\r\n                classe={'bt'}\r\n                classebt={'dividir'}\r\n                value={'/'}\r\n                Método={this.Método}\r\n                />\r\n                <br/>\r\n                <Button\r\n                classe={'bt'}\r\n                classebt={'number'}\r\n                value={'9'}\r\n                Método={this.Método}\r\n                />\r\n                <Button\r\n                classe={'bt'}\r\n                classebt={'number'}\r\n                value={'8'}\r\n                Método={this.Método}\r\n                />\r\n                <Button\r\n                classe={'bt'}\r\n                classebt={'number'}\r\n                value={'7'}\r\n                Método={this.Método}\r\n                />\r\n                <Button\r\n                classe={'bt'}\r\n                classebt={'multiplicar'}\r\n                value={'*'}\r\n                Método={this.Método}\r\n                />\r\n                <br/>\r\n                <Button\r\n                classe={'bt'}\r\n                classebt={'number'}\r\n                value={'6'}\r\n                Método={this.Método}\r\n                />\r\n                <Button\r\n                classe={'bt'}\r\n                classebt={'number'}\r\n                value={'5'}\r\n                Método={this.Método}\r\n                />\r\n                <Button\r\n                classe={'bt'}\r\n                classebt={'number'}\r\n                value={'4'}\r\n                Método={this.Método}\r\n                />\r\n                <Button\r\n                classe={'bt'}\r\n                classebt={'subtrair'}\r\n                value={'-'}\r\n                Método={this.Método}\r\n                />\r\n                <br/>\r\n                <Button\r\n                classe={'bt'}\r\n                classebt={'number'}\r\n                value={'3'}\r\n                Método={this.Método}\r\n                />\r\n                <Button\r\n                classe={'bt'}\r\n                classebt={'number'}\r\n                value={'2'}\r\n                Método={this.Método}\r\n                />\r\n                <Button\r\n                classe={'bt'}\r\n                classebt={'number'}\r\n                value={'1'}\r\n                Método={this.Método}\r\n                />\r\n                <Button\r\n                classe={'bt'}\r\n                classebt={'somar'}\r\n                value={'+'}\r\n                Método={this.Método}\r\n                />\r\n                <br/>\r\n                <Button\r\n                classe={'bt'}\r\n                classebt={'zero'}\r\n                value={'0'}\r\n                Método={this.Método}\r\n                />\r\n                <Button\r\n                classe={'bt'}\r\n                classebt={'number'}\r\n                value={'.'}\r\n                Método={this.Método}\r\n                />\r\n                <Button\r\n                classe={'bt'}\r\n                classebt={'resultado'}\r\n                value={'='}\r\n                Método={this.Método}\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Buttons;","import React, { Component } from 'react';\r\nimport './Output.css';\r\n\r\nclass Output extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div className='display'>\r\n                   {this.props.display} \r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Output;","import React, { Component } from 'react';\nimport Buttons from './Buttons';\nimport Output from './Output';\nimport './App.css';\n\nclass App extends Component {\n\n  constructor() {\n    super()\n    this.state = {\n      display: 0,\n      first: null,\n      last: null,\n      operação: null,\n    }\n  }\n\n  Set = (value) => {\n    if (value >= 0 || value <= 9) {\n      if (this.state.operação === null) {\n        let valor = null\n        let firststate = this.state.first\n        if (this.state.first === null) {\n          valor = value\n        }\n        else {\n          valor = firststate += value\n        }\n        this.setState({first: valor, display: valor})\n      }\n      else {\n        let valor = null\n        let laststate = this.state.last\n        if (this.state.last === null) {\n          valor = value\n        }\n        else {\n          valor = laststate += value\n        }\n        this.setState({last: valor, display: valor})\n      }\n    }\n    else if (value === '+' || value === '-' || value === '*' || value === '/') {\n      this.setState({operação: value, display: value})\n    }\n    else if (value === '=') {\n      this.Resultado()\n    } \n    else if (value === 'AC') {\n      this.AC()\n    }\n    else if (value === '.') {\n      if (this.state.last == null) {\n        let firststate = this.state.first\n        let valor = firststate += '.'\n        this.setState({first: valor, display: valor})\n      } else {\n        let laststate = this.state.last\n        let valor = laststate += '.'\n        this.setState({last: valor, display: valor})\n      }\n    }\n    else if (value === '+/-' || value === '%') {\n      alert('Função em desenvolvimento.')\n    }\n  }\n\n  Resultado = () => {\n    if (this.state.first !== null) {\n      if (this.state.operação === '+') {\n      this.Somar()\n      }\n      else if (this.state.operação === '-') {\n        this.Subtrair()\n      }\n      else if (this.state.operação === '*') {\n        this.Multiplicar()\n      }\n      else if (this.state.operação === '/') {\n        this.Dividir()\n      }\n    }\n    else {\n      if (this.state.operação === '+' || this.state.operação === '-') {\n        this.setState({display: this.state.last, first: this.state.last, last: null, operação: null})\n      } else {\n        this.AC()\n      }\n    }\n  }\n\n  AC = () => {\n    this.setState({display: 0, first: null, last: null, operação: null})\n  }\n\n  Somar = () => {\n    let total = Number(parseFloat(this.state.first)) + Number(parseFloat(this.state.last))\n    this.setState({first: total, last: null, display: total})\n  }\n\n  Subtrair = () => {\n    let total = Number(parseFloat(this.state.first)) - Number(parseFloat(this.state.last))\n    this.setState({first: total, last: null, display: total})\n  }\n\n  Multiplicar = () => {\n    let total = Number(parseFloat(this.state.first)) * Number(parseFloat(this.state.last))\n    this.setState({first: total, last: null, display: total})\n  }\n\n  Dividir = () => {\n    let total = Number(parseFloat(this.state.first)) / Number(parseFloat(this.state.last))\n    this.setState({first: total, last: null, display: total})\n  }\n\n  render() {\n    return(\n      <div className='App'>\n        <Output display={this.state.display}/>\n        <Buttons Método={this.Set}/>\n      </div>\n    )\n  }\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './componentes/App';\n\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}